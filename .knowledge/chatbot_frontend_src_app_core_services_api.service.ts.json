{"is_source_file": true, "format": "TypeScript", "description": "Angular service class ApiService that handles API interactions with backend endpoints for chat, products, checkout, and order summaries.", "external_files": ["@angular/core", "@angular/common/http", "rxjs", "../../../environments/environment", "../models/product.model"], "external_methods": ["inject (from @angular/core)", "HttpClient (from @angular/common/http)", "Observable, catchError, of, throwError (from rxjs)"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "Service class providing methods to interact with backend APIs for chat, product, and order functionalities."}], "methods": [{"name": "chat", "description": "Sends a chat message request and returns an observable of ChatResponse."}, {"name": "getProducts", "description": "Retrieves a list of products with optional search query and pagination."}, {"name": "getProduct", "description": "Retrieves details of a product by its ID."}, {"name": "summarizeOrder", "description": "Calculates order summary locally or via backend, returning subtotal, shipping, tax, and total."}, {"name": "checkout", "description": "Submits a checkout request and returns an order confirmation."}, {"name": "logHttpError", "description": "Logs HTTP errors for troubleshooting purposes."}, {"name": "function genId() { genId", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function round2(n: number) { round2", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["this.http.post", "this.http.get", "this.logHttpError", "of"], "search-terms": ["ApiService", "chat", "products", "checkout", "order", "HTTP", "Angular"], "state": 2, "file_id": 24, "knowledge_revision": 122, "git_revision": "467f60171e5798f2ab94ba65bfcf78dd3b95cdc2", "revision_history": [{"49": ""}, {"112": ""}, {"122": "467f60171e5798f2ab94ba65bfcf78dd3b95cdc2"}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const base = `[ApiService:${op}]`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^  readonly baseUrl = environment.apiBaseUrl;$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "cid", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const cid = correlationId ? ` cid=${correlationId}` : '';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "correlationId", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const correlationId = genId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "genId", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^function genId() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    let params = new HttpParams().set('page', page).set('pageSize', pageSize);$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "round2", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^function round2(n: number) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "shipping", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const shipping = subtotal > 100 ? 0 : 7.99;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const status = typeof error.status === 'number' ? ` status=${error.status}` : '';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "subtotal", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const subtotal = items.reduce((acc, i) => acc + i.product.price * i.quantity, 0);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "tax", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const tax = subtotal * 0.08;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const total = subtotal + shipping + tax;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/ecommerce-chatbot-platform-3036-3045/chatbot_frontend/src/app/core/services/api.service.ts", "pattern": "/^    const url = error.url ? ` url=${error.url}` : '';$/", "language": "TypeScript", "kind": "constant"}], "hash": "7f43bbd4506411f9709fcd3412560b38", "format-version": 4, "code-base-name": "chatbot_frontend", "filename": "chatbot_frontend/src/app/core/services/api.service.ts", "fields": [{"name": "readonly baseUrl = environment.apiBaseUrl;", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "private http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "let params = new HttpParams().set('page', page).set('pageSize', pageSize);", "scope": "", "scopeKind": "", "description": "unavailable"}]}